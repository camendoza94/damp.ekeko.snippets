#=(damp.ekeko.snippets.snippetgroup/make-snippetgroup "Anonymous Template Group" [#=(damp.ekeko.snippets.persistence/snippet-from-node-and-persisted-directives #=(damp.ekeko.snippets.parsing/parse-string-declaration "public void acceptVisitor(ComponentVisitor v){\n  System.out.println(\"Must alias.\");\n  Component temp=this;\n  v.visitMustAliasLeaf(temp);\n}\n") {#=(damp.ekeko.snippets.persistence/make-list-element-identifier #=(damp.ekeko.snippets.persistence/make-property-value-identifier #=(damp.ekeko.snippets.persistence/make-list-element-identifier #=(damp.ekeko.snippets.persistence/make-property-value-identifier #=(damp.ekeko.snippets.persistence/make-property-value-identifier #=(damp.ekeko.snippets.persistence/make-root-identifier) #=(damp.ekeko.snippets.persistence/class-propertydescriptor-with-id :MethodDeclaration "body")) #=(damp.ekeko.snippets.persistence/class-propertydescriptor-with-id :Block "statements")) #=(java.lang.Integer. "1")) #=(damp.ekeko.snippets.persistence/class-propertydescriptor-with-id :VariableDeclarationStatement "fragments")) #=(java.lang.Integer. "0")) (), #=(damp.ekeko.snippets.persistence/make-list-element-identifier #=(damp.ekeko.snippets.persistence/make-property-value-identifier #=(damp.ekeko.snippets.persistence/make-property-value-identifier #=(damp.ekeko.snippets.persistence/make-root-identifier) #=(damp.ekeko.snippets.persistence/class-propertydescriptor-with-id :MethodDeclaration "body")) #=(damp.ekeko.snippets.persistence/class-propertydescriptor-with-id :Block "statements")) #=(java.lang.Integer. "1")) (#=(damp.ekeko.snippets.directives/make-bounddirective #=(damp.ekeko.snippets.persistence/registered-directive-for-name "replaced-by-variable") (#=(damp.ekeko.snippets.directives/make-directiveoperand-binding #=(damp.ekeko.snippets.directives/make-directiveoperand "Variable replacing template node") "?s")))), #=(damp.ekeko.snippets.persistence/make-property-value-identifier #=(damp.ekeko.snippets.persistence/make-root-identifier) #=(damp.ekeko.snippets.persistence/class-propertydescriptor-with-id :MethodDeclaration "body")) (#=(damp.ekeko.snippets.directives/make-bounddirective #=(damp.ekeko.snippets.persistence/registered-directive-for-name "match") ()) #=(damp.ekeko.snippets.directives/make-bounddirective #=(damp.ekeko.snippets.persistence/registered-directive-for-name "child") ())), #=(damp.ekeko.snippets.persistence/make-property-value-identifier #=(damp.ekeko.snippets.persistence/make-property-value-identifier #=(damp.ekeko.snippets.persistence/make-property-value-identifier #=(damp.ekeko.snippets.persistence/make-list-element-identifier #=(damp.ekeko.snippets.persistence/make-property-value-identifier #=(damp.ekeko.snippets.persistence/make-property-value-identifier #=(damp.ekeko.snippets.persistence/make-root-identifier) #=(damp.ekeko.snippets.persistence/class-propertydescriptor-with-id :MethodDeclaration "body")) #=(damp.ekeko.snippets.persistence/class-propertydescriptor-with-id :Block "statements")) #=(java.lang.Integer. "1")) #=(damp.ekeko.snippets.persistence/class-propertydescriptor-with-id :VariableDeclarationStatement "type")) #=(damp.ekeko.snippets.persistence/class-propertydescriptor-with-id :SimpleType "name")) #=(damp.ekeko.snippets.persistence/class-propertydescriptor-with-id :SimpleName "identifier")) (), #=(damp.ekeko.snippets.persistence/make-property-value-identifier #=(damp.ekeko.snippets.persistence/make-property-value-identifier #=(damp.ekeko.snippets.persistence/make-property-value-identifier #=(damp.ekeko.snippets.persistence/make-list-element-identifier #=(damp.ekeko.snippets.persistence/make-property-value-identifier #=(damp.ekeko.snippets.persistence/make-property-value-identifier #=(damp.ekeko.snippets.persistence/make-root-identifier) #=(damp.ekeko.snippets.persistence/class-propertydescriptor-with-id :MethodDeclaration "body")) #=(damp.ekeko.snippets.persistence/class-propertydescriptor-with-id :Block "statements")) #=(java.lang.Integer. "2")) #=(damp.ekeko.snippets.persistence/class-propertydescriptor-with-id :ExpressionStatement "expression")) #=(damp.ekeko.snippets.persistence/class-propertydescriptor-with-id :MethodInvocation "expression")) #=(damp.ekeko.snippets.persistence/class-propertydescriptor-with-id :SimpleName "identifier")) (), #=(damp.ekeko.snippets.persistence/make-property-value-identifier #=(damp.ekeko.snippets.persistence/make-property-value-identifier #=(damp.ekeko.snippets.persistence/make-property-value-identifier #=(damp.ekeko.snippets.persistence/make-list-element-identifier #=(damp.ekeko.snippets.persistence/make-property-value-identifier #=(damp.ekeko.snippets.persistence/make-property-value-identifier #=(damp.ekeko.snippets.persistence/make-root-identifier) #=(damp.ekeko.snippets.persistence/class-propertydescriptor-with-id :MethodDeclaration "body")) #=(damp.ekeko.snippets.persistence/class-propertydescriptor-with-id :Block "statements")) #=(java.lang.Integer. "0")) #=(damp.ekeko.snippets.persistence/class-propertydescriptor-with-id :ExpressionStatement "expression")) #=(damp.ekeko.snippets.persistence/class-propertydescriptor-with-id :MethodInvocation "expression")) #=(damp.ekeko.snippets.persistence/class-propertydescriptor-with-id :QualifiedName "qualifier")) (), #=(damp.ekeko.snippets.persistence/make-property-value-identifier #=(damp.ekeko.snippets.persistence/make-list-element-identifier #=(damp.ekeko.snippets.persistence/make-property-value-identifier #=(damp.ekeko.snippets.persistence/make-list-element-identifier #=(damp.ekeko.snippets.persistence/make-property-value-identifier #=(damp.ekeko.snippets.persistence/make-property-value-identifier #=(damp.ekeko.snippets.persistence/make-root-identifier) #=(damp.ekeko.snippets.persistence/class-propertydescriptor-with-id :MethodDeclaration "body")) #=(damp.ekeko.snippets.persistence/class-propertydescriptor-with-id :Block "statements")) #=(java.lang.Integer. "1")) #=(damp.ekeko.snippets.persistence/class-propertydescriptor-with-id :VariableDeclarationStatement "fragments")) #=(java.lang.Integer. "0")) #=(damp.ekeko.snippets.persistence/class-propertydescriptor-with-id :VariableDeclarationFragment "name")) (), #=(damp.ekeko.snippets.persistence/make-property-value-identifier #=(damp.ekeko.snippets.persistence/make-root-identifier) #=(damp.ekeko.snippets.persistence/class-propertydescriptor-with-id :MethodDeclaration "extraDimensions")) (#=(damp.ekeko.snippets.directives/make-bounddirective #=(damp.ekeko.snippets.persistence/registered-directive-for-name "match") ()) #=(damp.ekeko.snippets.directives/make-bounddirective #=(damp.ekeko.snippets.persistence/registered-directive-for-name "child") ())), #=(damp.ekeko.snippets.persistence/make-property-value-identifier #=(damp.ekeko.snippets.persistence/make-property-value-identifier #=(damp.ekeko.snippets.persistence/make-list-element-identifier #=(damp.ekeko.snippets.persistence/make-property-value-identifier #=(damp.ekeko.snippets.persistence/make-list-element-identifier #=(damp.ekeko.snippets.persistence/make-property-value-identifier #=(damp.ekeko.snippets.persistence/make-property-value-identifier #=(damp.ekeko.snippets.persistence/make-root-identifier) #=(damp.ekeko.snippets.persistence/class-propertydescriptor-with-id :MethodDeclaration "body")) #=(damp.ekeko.snippets.persistence/class-propertydescriptor-with-id :Block "statements")) #=(java.lang.Integer. "1")) #=(damp.ekeko.snippets.persistence/class-propertydescriptor-with-id :VariableDeclarationStatement "fragments")) #=(java.lang.Integer. "0")) #=(damp.ekeko.snippets.persistence/class-propertydescriptor-with-id :VariableDeclarationFragment "initializer")) #=(damp.ekeko.snippets.persistence/class-propertydescriptor-with-id :ThisExpression "qualifier")) (), #=(damp.ekeko.snippets.persistence/make-property-value-identifier #=(damp.ekeko.snippets.persistence/make-property-value-identifier #=(damp.ekeko.snippets.persistence/make-root-identifier) #=(damp.ekeko.snippets.persistence/class-propertydescriptor-with-id :MethodDeclaration "name")) #=(damp.ekeko.snippets.persistence/class-propertydescriptor-with-id :SimpleName "identifier")) (#=(damp.ekeko.snippets.directives/make-bounddirective #=(damp.ekeko.snippets.persistence/registered-directive-for-name "match") ()) #=(damp.ekeko.snippets.directives/make-bounddirective #=(damp.ekeko.snippets.persistence/registered-directive-for-name "child") ())), #=(damp.ekeko.snippets.persistence/make-property-value-identifier #=(damp.ekeko.snippets.persistence/make-property-value-identifier #=(damp.ekeko.snippets.persistence/make-list-element-identifier #=(damp.ekeko.snippets.persistence/make-property-value-identifier #=(damp.ekeko.snippets.persistence/make-property-value-identifier #=(damp.ekeko.snippets.persistence/make-root-identifier) #=(damp.ekeko.snippets.persistence/class-propertydescriptor-with-id :MethodDeclaration "body")) #=(damp.ekeko.snippets.persistence/class-propertydescriptor-with-id :Block "statements")) #=(java.lang.Integer. "0")) #=(damp.ekeko.snippets.persistence/class-propertydescriptor-with-id :ExpressionStatement "expression")) #=(damp.ekeko.snippets.persistence/class-propertydescriptor-with-id :MethodInvocation "typeArguments")) (), #=(damp.ekeko.snippets.persistence/make-property-value-identifier #=(damp.ekeko.snippets.persistence/make-list-element-identifier #=(damp.ekeko.snippets.persistence/make-property-value-identifier #=(damp.ekeko.snippets.persistence/make-root-identifier) #=(damp.ekeko.snippets.persistence/class-propertydescriptor-with-id :MethodDeclaration "modifiers")) #=(java.lang.Integer. "0")) #=(damp.ekeko.snippets.persistence/class-propertydescriptor-with-id :Modifier "keyword")) (#=(damp.ekeko.snippets.directives/make-bounddirective #=(damp.ekeko.snippets.persistence/registered-directive-for-name "match") ()) #=(damp.ekeko.snippets.directives/make-bounddirective #=(damp.ekeko.snippets.persistence/registered-directive-for-name "child") ())), #=(damp.ekeko.snippets.persistence/make-list-element-identifier #=(damp.ekeko.snippets.persistence/make-property-value-identifier #=(damp.ekeko.snippets.persistence/make-property-value-identifier #=(damp.ekeko.snippets.persistence/make-root-identifier) #=(damp.ekeko.snippets.persistence/class-propertydescriptor-with-id :MethodDeclaration "body")) #=(damp.ekeko.snippets.persistence/class-propertydescriptor-with-id :Block "statements")) #=(java.lang.Integer. "0")) (#=(damp.ekeko.snippets.directives/make-bounddirective #=(damp.ekeko.snippets.persistence/registered-directive-for-name "multiplicity") (#=(damp.ekeko.snippets.directives/make-directiveoperand-binding #=(damp.ekeko.snippets.directives/make-directiveoperand "Multiplicity") "*"))) #=(damp.ekeko.snippets.directives/make-bounddirective #=(damp.ekeko.snippets.persistence/registered-directive-for-name "replaced-by-wildcard") ())), #=(damp.ekeko.snippets.persistence/make-property-value-identifier #=(damp.ekeko.snippets.persistence/make-property-value-identifier #=(damp.ekeko.snippets.persistence/make-root-identifier) #=(damp.ekeko.snippets.persistence/class-propertydescriptor-with-id :MethodDeclaration "returnType2")) #=(damp.ekeko.snippets.persistence/class-propertydescriptor-with-id :PrimitiveType "primitiveTypeCode")) (#=(damp.ekeko.snippets.directives/make-bounddirective #=(damp.ekeko.snippets.persistence/registered-directive-for-name "match") ()) #=(damp.ekeko.snippets.directives/make-bounddirective #=(damp.ekeko.snippets.persistence/registered-directive-for-name "child") ())), #=(damp.ekeko.snippets.persistence/make-property-value-identifier #=(damp.ekeko.snippets.persistence/make-property-value-identifier #=(damp.ekeko.snippets.persistence/make-list-element-identifier #=(damp.ekeko.snippets.persistence/make-property-value-identifier #=(damp.ekeko.snippets.persistence/make-property-value-identifier #=(damp.ekeko.snippets.persistence/make-root-identifier) #=(damp.ekeko.snippets.persistence/class-propertydescriptor-with-id :MethodDeclaration "body")) #=(damp.ekeko.snippets.persistence/class-propertydescriptor-with-id :Block "statements")) #=(java.lang.Integer. "2")) #=(damp.ekeko.snippets.persistence/class-propertydescriptor-with-id :ExpressionStatement "expression")) #=(damp.ekeko.snippets.persistence/class-propertydescriptor-with-id :MethodInvocation "typeArguments")) (), #=(damp.ekeko.snippets.persistence/make-property-value-identifier #=(damp.ekeko.snippets.persistence/make-property-value-identifier #=(damp.ekeko.snippets.persistence/make-list-element-identifier #=(damp.ekeko.snippets.persistence/make-property-value-identifier #=(damp.ekeko.snippets.persistence/make-property-value-identifier #=(damp.ekeko.snippets.persistence/make-root-identifier) #=(damp.ekeko.snippets.persistence/class-propertydescriptor-with-id :MethodDeclaration "body")) #=(damp.ekeko.snippets.persistence/class-propertydescriptor-with-id :Block "statements")) #=(java.lang.Integer. "2")) #=(damp.ekeko.snippets.persistence/class-propertydescriptor-with-id :ExpressionStatement "expression")) #=(damp.ekeko.snippets.persistence/class-propertydescriptor-with-id :MethodInvocation "arguments")) (), #=(damp.ekeko.snippets.persistence/make-property-value-identifier #=(damp.ekeko.snippets.persistence/make-property-value-identifier #=(damp.ekeko.snippets.persistence/make-list-element-identifier #=(damp.ekeko.snippets.persistence/make-property-value-identifier #=(damp.ekeko.snippets.persistence/make-property-value-identifier #=(damp.ekeko.snippets.persistence/make-root-identifier) #=(damp.ekeko.snippets.persistence/class-propertydescriptor-with-id :MethodDeclaration "body")) #=(damp.ekeko.snippets.persistence/class-propertydescriptor-with-id :Block "statements")) #=(java.lang.Integer. "1")) #=(damp.ekeko.snippets.persistence/class-propertydescriptor-with-id :VariableDeclarationStatement "type")) #=(damp.ekeko.snippets.persistence/class-propertydescriptor-with-id :SimpleType "name")) (), #=(damp.ekeko.snippets.persistence/make-property-value-identifier #=(damp.ekeko.snippets.persistence/make-property-value-identifier #=(damp.ekeko.snippets.persistence/make-list-element-identifier #=(damp.ekeko.snippets.persistence/make-property-value-identifier #=(damp.ekeko.snippets.persistence/make-property-value-identifier #=(damp.ekeko.snippets.persistence/make-root-identifier) #=(damp.ekeko.snippets.persistence/class-propertydescriptor-with-id :MethodDeclaration "body")) #=(damp.ekeko.snippets.persistence/class-propertydescriptor-with-id :Block "statements")) #=(java.lang.Integer. "0")) #=(damp.ekeko.snippets.persistence/class-propertydescriptor-with-id :ExpressionStatement "expression")) #=(damp.ekeko.snippets.persistence/class-propertydescriptor-with-id :MethodInvocation "name")) (), #=(damp.ekeko.snippets.persistence/make-property-value-identifier #=(damp.ekeko.snippets.persistence/make-property-value-identifier #=(damp.ekeko.snippets.persistence/make-list-element-identifier #=(damp.ekeko.snippets.persistence/make-property-value-identifier #=(damp.ekeko.snippets.persistence/make-property-value-identifier #=(damp.ekeko.snippets.persistence/make-root-identifier) #=(damp.ekeko.snippets.persistence/class-propertydescriptor-with-id :MethodDeclaration "body")) #=(damp.ekeko.snippets.persistence/class-propertydescriptor-with-id :Block "statements")) #=(java.lang.Integer. "0")) #=(damp.ekeko.snippets.persistence/class-propertydescriptor-with-id :ExpressionStatement "expression")) #=(damp.ekeko.snippets.persistence/class-propertydescriptor-with-id :MethodInvocation "arguments")) (), #=(damp.ekeko.snippets.persistence/make-property-value-identifier #=(damp.ekeko.snippets.persistence/make-root-identifier) #=(damp.ekeko.snippets.persistence/class-propertydescriptor-with-id :MethodDeclaration "returnType2")) (#=(damp.ekeko.snippets.directives/make-bounddirective #=(damp.ekeko.snippets.persistence/registered-directive-for-name "match") ()) #=(damp.ekeko.snippets.directives/make-bounddirective #=(damp.ekeko.snippets.persistence/registered-directive-for-name "child") ())), #=(damp.ekeko.snippets.persistence/make-property-value-identifier #=(damp.ekeko.snippets.persistence/make-list-element-identifier #=(damp.ekeko.snippets.persistence/make-property-value-identifier #=(damp.ekeko.snippets.persistence/make-property-value-identifier #=(damp.ekeko.snippets.persistence/make-root-identifier) #=(damp.ekeko.snippets.persistence/class-propertydescriptor-with-id :MethodDeclaration "body")) #=(damp.ekeko.snippets.persistence/class-propertydescriptor-with-id :Block "statements")) #=(java.lang.Integer. "1")) #=(damp.ekeko.snippets.persistence/class-propertydescriptor-with-id :VariableDeclarationStatement "type")) (), #=(damp.ekeko.snippets.persistence/make-property-value-identifier #=(damp.ekeko.snippets.persistence/make-property-value-identifier #=(damp.ekeko.snippets.persistence/make-property-value-identifier #=(damp.ekeko.snippets.persistence/make-list-element-identifier #=(damp.ekeko.snippets.persistence/make-property-value-identifier #=(damp.ekeko.snippets.persistence/make-root-identifier) #=(damp.ekeko.snippets.persistence/class-propertydescriptor-with-id :MethodDeclaration "parameters")) #=(java.lang.Integer. "0")) #=(damp.ekeko.snippets.persistence/class-propertydescriptor-with-id :SingleVariableDeclaration "type")) #=(damp.ekeko.snippets.persistence/class-propertydescriptor-with-id :SimpleType "name")) #=(damp.ekeko.snippets.persistence/class-propertydescriptor-with-id :SimpleName "identifier")) (#=(damp.ekeko.snippets.directives/make-bounddirective #=(damp.ekeko.snippets.persistence/registered-directive-for-name "match") ()) #=(damp.ekeko.snippets.directives/make-bounddirective #=(damp.ekeko.snippets.persistence/registered-directive-for-name "child") ())), #=(damp.ekeko.snippets.persistence/make-property-value-identifier #=(damp.ekeko.snippets.persistence/make-property-value-identifier #=(damp.ekeko.snippets.persistence/make-property-value-identifier #=(damp.ekeko.snippets.persistence/make-list-element-identifier #=(damp.ekeko.snippets.persistence/make-property-value-identifier #=(damp.ekeko.snippets.persistence/make-property-value-identifier #=(damp.ekeko.snippets.persistence/make-root-identifier) #=(damp.ekeko.snippets.persistence/class-propertydescriptor-with-id :MethodDeclaration "body")) #=(damp.ekeko.snippets.persistence/class-propertydescriptor-with-id :Block "statements")) #=(java.lang.Integer. "0")) #=(damp.ekeko.snippets.persistence/class-propertydescriptor-with-id :ExpressionStatement "expression")) #=(damp.ekeko.snippets.persistence/class-propertydescriptor-with-id :MethodInvocation "expression")) #=(damp.ekeko.snippets.persistence/class-propertydescriptor-with-id :QualifiedName "name")) (), #=(damp.ekeko.snippets.persistence/make-property-value-identifier #=(damp.ekeko.snippets.persistence/make-list-element-identifier #=(damp.ekeko.snippets.persistence/make-property-value-identifier #=(damp.ekeko.snippets.persistence/make-property-value-identifier #=(damp.ekeko.snippets.persistence/make-root-identifier) #=(damp.ekeko.snippets.persistence/class-propertydescriptor-with-id :MethodDeclaration "body")) #=(damp.ekeko.snippets.persistence/class-propertydescriptor-with-id :Block "statements")) #=(java.lang.Integer. "1")) #=(damp.ekeko.snippets.persistence/class-propertydescriptor-with-id :VariableDeclarationStatement "fragments")) (), #=(damp.ekeko.snippets.persistence/make-root-identifier) (#=(damp.ekeko.snippets.directives/make-bounddirective #=(damp.ekeko.snippets.persistence/registered-directive-for-name "match") ()) #=(damp.ekeko.snippets.directives/make-bounddirective #=(damp.ekeko.snippets.persistence/registered-directive-for-name "child") ())), #=(damp.ekeko.snippets.persistence/make-list-element-identifier #=(damp.ekeko.snippets.persistence/make-property-value-identifier #=(damp.ekeko.snippets.persistence/make-root-identifier) #=(damp.ekeko.snippets.persistence/class-propertydescriptor-with-id :MethodDeclaration "parameters")) #=(java.lang.Integer. "0")) (#=(damp.ekeko.snippets.directives/make-bounddirective #=(damp.ekeko.snippets.persistence/registered-directive-for-name "match") ()) #=(damp.ekeko.snippets.directives/make-bounddirective #=(damp.ekeko.snippets.persistence/registered-directive-for-name "child") ())), #=(damp.ekeko.snippets.persistence/make-list-element-identifier #=(damp.ekeko.snippets.persistence/make-property-value-identifier #=(damp.ekeko.snippets.persistence/make-root-identifier) #=(damp.ekeko.snippets.persistence/class-propertydescriptor-with-id :MethodDeclaration "modifiers")) #=(java.lang.Integer. "0")) (#=(damp.ekeko.snippets.directives/make-bounddirective #=(damp.ekeko.snippets.persistence/registered-directive-for-name "match") ()) #=(damp.ekeko.snippets.directives/make-bounddirective #=(damp.ekeko.snippets.persistence/registered-directive-for-name "child") ())), #=(damp.ekeko.snippets.persistence/make-property-value-identifier #=(damp.ekeko.snippets.persistence/make-list-element-identifier #=(damp.ekeko.snippets.persistence/make-property-value-identifier #=(damp.ekeko.snippets.persistence/make-property-value-identifier #=(damp.ekeko.snippets.persistence/make-root-identifier) #=(damp.ekeko.snippets.persistence/class-propertydescriptor-with-id :MethodDeclaration "body")) #=(damp.ekeko.snippets.persistence/class-propertydescriptor-with-id :Block "statements")) #=(java.lang.Integer. "2")) #=(damp.ekeko.snippets.persistence/class-propertydescriptor-with-id :ExpressionStatement "expression")) (), #=(damp.ekeko.snippets.persistence/make-property-value-identifier #=(damp.ekeko.snippets.persistence/make-property-value-identifier #=(damp.ekeko.snippets.persistence/make-property-value-identifier #=(damp.ekeko.snippets.persistence/make-property-value-identifier #=(damp.ekeko.snippets.persistence/make-list-element-identifier #=(damp.ekeko.snippets.persistence/make-property-value-identifier #=(damp.ekeko.snippets.persistence/make-property-value-identifier #=(damp.ekeko.snippets.persistence/make-root-identifier) #=(damp.ekeko.snippets.persistence/class-propertydescriptor-with-id :MethodDeclaration "body")) #=(damp.ekeko.snippets.persistence/class-propertydescriptor-with-id :Block "statements")) #=(java.lang.Integer. "0")) #=(damp.ekeko.snippets.persistence/class-propertydescriptor-with-id :ExpressionStatement "expression")) #=(damp.ekeko.snippets.persistence/class-propertydescriptor-with-id :MethodInvocation "expression")) #=(damp.ekeko.snippets.persistence/class-propertydescriptor-with-id :QualifiedName "qualifier")) #=(damp.ekeko.snippets.persistence/class-propertydescriptor-with-id :SimpleName "identifier")) (), #=(damp.ekeko.snippets.persistence/make-property-value-identifier #=(damp.ekeko.snippets.persistence/make-property-value-identifier #=(damp.ekeko.snippets.persistence/make-property-value-identifier #=(damp.ekeko.snippets.persistence/make-list-element-identifier #=(damp.ekeko.snippets.persistence/make-property-value-identifier #=(damp.ekeko.snippets.persistence/make-property-value-identifier #=(damp.ekeko.snippets.persistence/make-root-identifier) #=(damp.ekeko.snippets.persistence/class-propertydescriptor-with-id :MethodDeclaration "body")) #=(damp.ekeko.snippets.persistence/class-propertydescriptor-with-id :Block "statements")) #=(java.lang.Integer. "0")) #=(damp.ekeko.snippets.persistence/class-propertydescriptor-with-id :ExpressionStatement "expression")) #=(damp.ekeko.snippets.persistence/class-propertydescriptor-with-id :MethodInvocation "name")) #=(damp.ekeko.snippets.persistence/class-propertydescriptor-with-id :SimpleName "identifier")) (), #=(damp.ekeko.snippets.persistence/make-list-element-identifier #=(damp.ekeko.snippets.persistence/make-property-value-identifier #=(damp.ekeko.snippets.persistence/make-property-value-identifier #=(damp.ekeko.snippets.persistence/make-list-element-identifier #=(damp.ekeko.snippets.persistence/make-property-value-identifier #=(damp.ekeko.snippets.persistence/make-property-value-identifier #=(damp.ekeko.snippets.persistence/make-root-identifier) #=(damp.ekeko.snippets.persistence/class-propertydescriptor-with-id :MethodDeclaration "body")) #=(damp.ekeko.snippets.persistence/class-propertydescriptor-with-id :Block "statements")) #=(java.lang.Integer. "0")) #=(damp.ekeko.snippets.persistence/class-propertydescriptor-with-id :ExpressionStatement "expression")) #=(damp.ekeko.snippets.persistence/class-propertydescriptor-with-id :MethodInvocation "arguments")) #=(java.lang.Integer. "0")) (), #=(damp.ekeko.snippets.persistence/make-property-value-identifier #=(damp.ekeko.snippets.persistence/make-root-identifier) #=(damp.ekeko.snippets.persistence/class-propertydescriptor-with-id :MethodDeclaration "constructor")) (#=(damp.ekeko.snippets.directives/make-bounddirective #=(damp.ekeko.snippets.persistence/registered-directive-for-name "match") ()) #=(damp.ekeko.snippets.directives/make-bounddirective #=(damp.ekeko.snippets.persistence/registered-directive-for-name "child") ())), #=(damp.ekeko.snippets.persistence/make-property-value-identifier #=(damp.ekeko.snippets.persistence/make-property-value-identifier #=(damp.ekeko.snippets.persistence/make-list-element-identifier #=(damp.ekeko.snippets.persistence/make-property-value-identifier #=(damp.ekeko.snippets.persistence/make-list-element-identifier #=(damp.ekeko.snippets.persistence/make-property-value-identifier #=(damp.ekeko.snippets.persistence/make-property-value-identifier #=(damp.ekeko.snippets.persistence/make-root-identifier) #=(damp.ekeko.snippets.persistence/class-propertydescriptor-with-id :MethodDeclaration "body")) #=(damp.ekeko.snippets.persistence/class-propertydescriptor-with-id :Block "statements")) #=(java.lang.Integer. "1")) #=(damp.ekeko.snippets.persistence/class-propertydescriptor-with-id :VariableDeclarationStatement "fragments")) #=(java.lang.Integer. "0")) #=(damp.ekeko.snippets.persistence/class-propertydescriptor-with-id :VariableDeclarationFragment "name")) #=(damp.ekeko.snippets.persistence/class-propertydescriptor-with-id :SimpleName "identifier")) (), #=(damp.ekeko.snippets.persistence/make-property-value-identifier #=(damp.ekeko.snippets.persistence/make-list-element-identifier #=(damp.ekeko.snippets.persistence/make-property-value-identifier #=(damp.ekeko.snippets.persistence/make-root-identifier) #=(damp.ekeko.snippets.persistence/class-propertydescriptor-with-id :MethodDeclaration "parameters")) #=(java.lang.Integer. "0")) #=(damp.ekeko.snippets.persistence/class-propertydescriptor-with-id :SingleVariableDeclaration "extraDimensions")) (#=(damp.ekeko.snippets.directives/make-bounddirective #=(damp.ekeko.snippets.persistence/registered-directive-for-name "match") ()) #=(damp.ekeko.snippets.directives/make-bounddirective #=(damp.ekeko.snippets.persistence/registered-directive-for-name "child") ())), #=(damp.ekeko.snippets.persistence/make-list-element-identifier #=(damp.ekeko.snippets.persistence/make-property-value-identifier #=(damp.ekeko.snippets.persistence/make-property-value-identifier #=(damp.ekeko.snippets.persistence/make-root-identifier) #=(damp.ekeko.snippets.persistence/class-propertydescriptor-with-id :MethodDeclaration "body")) #=(damp.ekeko.snippets.persistence/class-propertydescriptor-with-id :Block "statements")) #=(java.lang.Integer. "2")) (#=(damp.ekeko.snippets.directives/make-bounddirective #=(damp.ekeko.snippets.persistence/registered-directive-for-name "multiplicity") (#=(damp.ekeko.snippets.directives/make-directiveoperand-binding #=(damp.ekeko.snippets.directives/make-directiveoperand "Multiplicity") "*"))) #=(damp.ekeko.snippets.directives/make-bounddirective #=(damp.ekeko.snippets.persistence/registered-directive-for-name "replaced-by-wildcard") ())), #=(damp.ekeko.snippets.persistence/make-property-value-identifier #=(damp.ekeko.snippets.persistence/make-property-value-identifier #=(damp.ekeko.snippets.persistence/make-root-identifier) #=(damp.ekeko.snippets.persistence/class-propertydescriptor-with-id :MethodDeclaration "body")) #=(damp.ekeko.snippets.persistence/class-propertydescriptor-with-id :Block "statements")) (#=(damp.ekeko.snippets.directives/make-bounddirective #=(damp.ekeko.snippets.persistence/registered-directive-for-name "match|regexp") ()) #=(damp.ekeko.snippets.directives/make-bounddirective #=(damp.ekeko.snippets.persistence/registered-directive-for-name "child") ())), #=(damp.ekeko.snippets.persistence/make-property-value-identifier #=(damp.ekeko.snippets.persistence/make-root-identifier) #=(damp.ekeko.snippets.persistence/class-propertydescriptor-with-id :MethodDeclaration "parameters")) (#=(damp.ekeko.snippets.directives/make-bounddirective #=(damp.ekeko.snippets.persistence/registered-directive-for-name "match") ()) #=(damp.ekeko.snippets.directives/make-bounddirective #=(damp.ekeko.snippets.persistence/registered-directive-for-name "child") ())), #=(damp.ekeko.snippets.persistence/make-property-value-identifier #=(damp.ekeko.snippets.persistence/make-list-element-identifier #=(damp.ekeko.snippets.persistence/make-property-value-identifier #=(damp.ekeko.snippets.persistence/make-property-value-identifier #=(damp.ekeko.snippets.persistence/make-list-element-identifier #=(damp.ekeko.snippets.persistence/make-property-value-identifier #=(damp.ekeko.snippets.persistence/make-property-value-identifier #=(damp.ekeko.snippets.persistence/make-root-identifier) #=(damp.ekeko.snippets.persistence/class-propertydescriptor-with-id :MethodDeclaration "body")) #=(damp.ekeko.snippets.persistence/class-propertydescriptor-with-id :Block "statements")) #=(java.lang.Integer. "0")) #=(damp.ekeko.snippets.persistence/class-propertydescriptor-with-id :ExpressionStatement "expression")) #=(damp.ekeko.snippets.persistence/class-propertydescriptor-with-id :MethodInvocation "arguments")) #=(java.lang.Integer. "0")) #=(damp.ekeko.snippets.persistence/class-propertydescriptor-with-id :StringLiteral "escapedValue")) (), #=(damp.ekeko.snippets.persistence/make-property-value-identifier #=(damp.ekeko.snippets.persistence/make-property-value-identifier #=(damp.ekeko.snippets.persistence/make-property-value-identifier #=(damp.ekeko.snippets.persistence/make-property-value-identifier #=(damp.ekeko.snippets.persistence/make-list-element-identifier #=(damp.ekeko.snippets.persistence/make-property-value-identifier #=(damp.ekeko.snippets.persistence/make-property-value-identifier #=(damp.ekeko.snippets.persistence/make-root-identifier) #=(damp.ekeko.snippets.persistence/class-propertydescriptor-with-id :MethodDeclaration "body")) #=(damp.ekeko.snippets.persistence/class-propertydescriptor-with-id :Block "statements")) #=(java.lang.Integer. "0")) #=(damp.ekeko.snippets.persistence/class-propertydescriptor-with-id :ExpressionStatement "expression")) #=(damp.ekeko.snippets.persistence/class-propertydescriptor-with-id :MethodInvocation "expression")) #=(damp.ekeko.snippets.persistence/class-propertydescriptor-with-id :QualifiedName "name")) #=(damp.ekeko.snippets.persistence/class-propertydescriptor-with-id :SimpleName "identifier")) (), #=(damp.ekeko.snippets.persistence/make-property-value-identifier #=(damp.ekeko.snippets.persistence/make-list-element-identifier #=(damp.ekeko.snippets.persistence/make-property-value-identifier #=(damp.ekeko.snippets.persistence/make-root-identifier) #=(damp.ekeko.snippets.persistence/class-propertydescriptor-with-id :MethodDeclaration "parameters")) #=(java.lang.Integer. "0")) #=(damp.ekeko.snippets.persistence/class-propertydescriptor-with-id :SingleVariableDeclaration "modifiers")) (#=(damp.ekeko.snippets.directives/make-bounddirective #=(damp.ekeko.snippets.persistence/registered-directive-for-name "match") ()) #=(damp.ekeko.snippets.directives/make-bounddirective #=(damp.ekeko.snippets.persistence/registered-directive-for-name "child") ())), #=(damp.ekeko.snippets.persistence/make-property-value-identifier #=(damp.ekeko.snippets.persistence/make-list-element-identifier #=(damp.ekeko.snippets.persistence/make-property-value-identifier #=(damp.ekeko.snippets.persistence/make-root-identifier) #=(damp.ekeko.snippets.persistence/class-propertydescriptor-with-id :MethodDeclaration "parameters")) #=(java.lang.Integer. "0")) #=(damp.ekeko.snippets.persistence/class-propertydescriptor-with-id :SingleVariableDeclaration "initializer")) (#=(damp.ekeko.snippets.directives/make-bounddirective #=(damp.ekeko.snippets.persistence/registered-directive-for-name "match") ()) #=(damp.ekeko.snippets.directives/make-bounddirective #=(damp.ekeko.snippets.persistence/registered-directive-for-name "child") ())), #=(damp.ekeko.snippets.persistence/make-property-value-identifier #=(damp.ekeko.snippets.persistence/make-root-identifier) #=(damp.ekeko.snippets.persistence/class-propertydescriptor-with-id :MethodDeclaration "thrownExceptions")) (#=(damp.ekeko.snippets.directives/make-bounddirective #=(damp.ekeko.snippets.persistence/registered-directive-for-name "match") ()) #=(damp.ekeko.snippets.directives/make-bounddirective #=(damp.ekeko.snippets.persistence/registered-directive-for-name "child") ())), #=(damp.ekeko.snippets.persistence/make-property-value-identifier #=(damp.ekeko.snippets.persistence/make-property-value-identifier #=(damp.ekeko.snippets.persistence/make-list-element-identifier #=(damp.ekeko.snippets.persistence/make-property-value-identifier #=(damp.ekeko.snippets.persistence/make-property-value-identifier #=(damp.ekeko.snippets.persistence/make-root-identifier) #=(damp.ekeko.snippets.persistence/class-propertydescriptor-with-id :MethodDeclaration "body")) #=(damp.ekeko.snippets.persistence/class-propertydescriptor-with-id :Block "statements")) #=(java.lang.Integer. "2")) #=(damp.ekeko.snippets.persistence/class-propertydescriptor-with-id :ExpressionStatement "expression")) #=(damp.ekeko.snippets.persistence/class-propertydescriptor-with-id :MethodInvocation "name")) (), #=(damp.ekeko.snippets.persistence/make-property-value-identifier #=(damp.ekeko.snippets.persistence/make-list-element-identifier #=(damp.ekeko.snippets.persistence/make-property-value-identifier #=(damp.ekeko.snippets.persistence/make-root-identifier) #=(damp.ekeko.snippets.persistence/class-propertydescriptor-with-id :MethodDeclaration "parameters")) #=(java.lang.Integer. "0")) #=(damp.ekeko.snippets.persistence/class-propertydescriptor-with-id :SingleVariableDeclaration "name")) (#=(damp.ekeko.snippets.directives/make-bounddirective #=(damp.ekeko.snippets.persistence/registered-directive-for-name "match") ()) #=(damp.ekeko.snippets.directives/make-bounddirective #=(damp.ekeko.snippets.persistence/registered-directive-for-name "child") ())), #=(damp.ekeko.snippets.persistence/make-property-value-identifier #=(damp.ekeko.snippets.persistence/make-list-element-identifier #=(damp.ekeko.snippets.persistence/make-property-value-identifier #=(damp.ekeko.snippets.persistence/make-list-element-identifier #=(damp.ekeko.snippets.persistence/make-property-value-identifier #=(damp.ekeko.snippets.persistence/make-property-value-identifier #=(damp.ekeko.snippets.persistence/make-root-identifier) #=(damp.ekeko.snippets.persistence/class-propertydescriptor-with-id :MethodDeclaration "body")) #=(damp.ekeko.snippets.persistence/class-propertydescriptor-with-id :Block "statements")) #=(java.lang.Integer. "1")) #=(damp.ekeko.snippets.persistence/class-propertydescriptor-with-id :VariableDeclarationStatement "fragments")) #=(java.lang.Integer. "0")) #=(damp.ekeko.snippets.persistence/class-propertydescriptor-with-id :VariableDeclarationFragment "initializer")) (), #=(damp.ekeko.snippets.persistence/make-property-value-identifier #=(damp.ekeko.snippets.persistence/make-property-value-identifier #=(damp.ekeko.snippets.persistence/make-property-value-identifier #=(damp.ekeko.snippets.persistence/make-list-element-identifier #=(damp.ekeko.snippets.persistence/make-property-value-identifier #=(damp.ekeko.snippets.persistence/make-property-value-identifier #=(damp.ekeko.snippets.persistence/make-root-identifier) #=(damp.ekeko.snippets.persistence/class-propertydescriptor-with-id :MethodDeclaration "body")) #=(damp.ekeko.snippets.persistence/class-propertydescriptor-with-id :Block "statements")) #=(java.lang.Integer. "2")) #=(damp.ekeko.snippets.persistence/class-propertydescriptor-with-id :ExpressionStatement "expression")) #=(damp.ekeko.snippets.persistence/class-propertydescriptor-with-id :MethodInvocation "name")) #=(damp.ekeko.snippets.persistence/class-propertydescriptor-with-id :SimpleName "identifier")) (), #=(damp.ekeko.snippets.persistence/make-property-value-identifier #=(damp.ekeko.snippets.persistence/make-property-value-identifier #=(damp.ekeko.snippets.persistence/make-list-element-identifier #=(damp.ekeko.snippets.persistence/make-property-value-identifier #=(damp.ekeko.snippets.persistence/make-property-value-identifier #=(damp.ekeko.snippets.persistence/make-root-identifier) #=(damp.ekeko.snippets.persistence/class-propertydescriptor-with-id :MethodDeclaration "body")) #=(damp.ekeko.snippets.persistence/class-propertydescriptor-with-id :Block "statements")) #=(java.lang.Integer. "2")) #=(damp.ekeko.snippets.persistence/class-propertydescriptor-with-id :ExpressionStatement "expression")) #=(damp.ekeko.snippets.persistence/class-propertydescriptor-with-id :MethodInvocation "expression")) (), #=(damp.ekeko.snippets.persistence/make-property-value-identifier #=(damp.ekeko.snippets.persistence/make-root-identifier) #=(damp.ekeko.snippets.persistence/class-propertydescriptor-with-id :MethodDeclaration "modifiers")) (#=(damp.ekeko.snippets.directives/make-bounddirective #=(damp.ekeko.snippets.persistence/registered-directive-for-name "match") ()) #=(damp.ekeko.snippets.directives/make-bounddirective #=(damp.ekeko.snippets.persistence/registered-directive-for-name "child") ())), #=(damp.ekeko.snippets.persistence/make-property-value-identifier #=(damp.ekeko.snippets.persistence/make-property-value-identifier #=(damp.ekeko.snippets.persistence/make-list-element-identifier #=(damp.ekeko.snippets.persistence/make-property-value-identifier #=(damp.ekeko.snippets.persistence/make-root-identifier) #=(damp.ekeko.snippets.persistence/class-propertydescriptor-with-id :MethodDeclaration "parameters")) #=(java.lang.Integer. "0")) #=(damp.ekeko.snippets.persistence/class-propertydescriptor-with-id :SingleVariableDeclaration "type")) #=(damp.ekeko.snippets.persistence/class-propertydescriptor-with-id :SimpleType "name")) (#=(damp.ekeko.snippets.directives/make-bounddirective #=(damp.ekeko.snippets.persistence/registered-directive-for-name "match") ()) #=(damp.ekeko.snippets.directives/make-bounddirective #=(damp.ekeko.snippets.persistence/registered-directive-for-name "child") ())), #=(damp.ekeko.snippets.persistence/make-property-value-identifier #=(damp.ekeko.snippets.persistence/make-property-value-identifier #=(damp.ekeko.snippets.persistence/make-list-element-identifier #=(damp.ekeko.snippets.persistence/make-property-value-identifier #=(damp.ekeko.snippets.persistence/make-root-identifier) #=(damp.ekeko.snippets.persistence/class-propertydescriptor-with-id :MethodDeclaration "parameters")) #=(java.lang.Integer. "0")) #=(damp.ekeko.snippets.persistence/class-propertydescriptor-with-id :SingleVariableDeclaration "name")) #=(damp.ekeko.snippets.persistence/class-propertydescriptor-with-id :SimpleName "identifier")) (#=(damp.ekeko.snippets.directives/make-bounddirective #=(damp.ekeko.snippets.persistence/registered-directive-for-name "match") ()) #=(damp.ekeko.snippets.directives/make-bounddirective #=(damp.ekeko.snippets.persistence/registered-directive-for-name "child") ())), #=(damp.ekeko.snippets.persistence/make-property-value-identifier #=(damp.ekeko.snippets.persistence/make-list-element-identifier #=(damp.ekeko.snippets.persistence/make-property-value-identifier #=(damp.ekeko.snippets.persistence/make-property-value-identifier #=(damp.ekeko.snippets.persistence/make-list-element-identifier #=(damp.ekeko.snippets.persistence/make-property-value-identifier #=(damp.ekeko.snippets.persistence/make-property-value-identifier #=(damp.ekeko.snippets.persistence/make-root-identifier) #=(damp.ekeko.snippets.persistence/class-propertydescriptor-with-id :MethodDeclaration "body")) #=(damp.ekeko.snippets.persistence/class-propertydescriptor-with-id :Block "statements")) #=(java.lang.Integer. "2")) #=(damp.ekeko.snippets.persistence/class-propertydescriptor-with-id :ExpressionStatement "expression")) #=(damp.ekeko.snippets.persistence/class-propertydescriptor-with-id :MethodInvocation "arguments")) #=(java.lang.Integer. "0")) #=(damp.ekeko.snippets.persistence/class-propertydescriptor-with-id :SimpleName "identifier")) (), #=(damp.ekeko.snippets.persistence/make-property-value-identifier #=(damp.ekeko.snippets.persistence/make-list-element-identifier #=(damp.ekeko.snippets.persistence/make-property-value-identifier #=(damp.ekeko.snippets.persistence/make-property-value-identifier #=(damp.ekeko.snippets.persistence/make-root-identifier) #=(damp.ekeko.snippets.persistence/class-propertydescriptor-with-id :MethodDeclaration "body")) #=(damp.ekeko.snippets.persistence/class-propertydescriptor-with-id :Block "statements")) #=(java.lang.Integer. "1")) #=(damp.ekeko.snippets.persistence/class-propertydescriptor-with-id :VariableDeclarationStatement "modifiers")) (), #=(damp.ekeko.snippets.persistence/make-property-value-identifier #=(damp.ekeko.snippets.persistence/make-list-element-identifier #=(damp.ekeko.snippets.persistence/make-property-value-identifier #=(damp.ekeko.snippets.persistence/make-root-identifier) #=(damp.ekeko.snippets.persistence/class-propertydescriptor-with-id :MethodDeclaration "parameters")) #=(java.lang.Integer. "0")) #=(damp.ekeko.snippets.persistence/class-propertydescriptor-with-id :SingleVariableDeclaration "varargs")) (#=(damp.ekeko.snippets.directives/make-bounddirective #=(damp.ekeko.snippets.persistence/registered-directive-for-name "match") ()) #=(damp.ekeko.snippets.directives/make-bounddirective #=(damp.ekeko.snippets.persistence/registered-directive-for-name "child") ())), #=(damp.ekeko.snippets.persistence/make-property-value-identifier #=(damp.ekeko.snippets.persistence/make-property-value-identifier #=(damp.ekeko.snippets.persistence/make-list-element-identifier #=(damp.ekeko.snippets.persistence/make-property-value-identifier #=(damp.ekeko.snippets.persistence/make-property-value-identifier #=(damp.ekeko.snippets.persistence/make-root-identifier) #=(damp.ekeko.snippets.persistence/class-propertydescriptor-with-id :MethodDeclaration "body")) #=(damp.ekeko.snippets.persistence/class-propertydescriptor-with-id :Block "statements")) #=(java.lang.Integer. "0")) #=(damp.ekeko.snippets.persistence/class-propertydescriptor-with-id :ExpressionStatement "expression")) #=(damp.ekeko.snippets.persistence/class-propertydescriptor-with-id :MethodInvocation "expression")) (), #=(damp.ekeko.snippets.persistence/make-property-value-identifier #=(damp.ekeko.snippets.persistence/make-root-identifier) #=(damp.ekeko.snippets.persistence/class-propertydescriptor-with-id :MethodDeclaration "name")) (#=(damp.ekeko.snippets.directives/make-bounddirective #=(damp.ekeko.snippets.persistence/registered-directive-for-name "match") ()) #=(damp.ekeko.snippets.directives/make-bounddirective #=(damp.ekeko.snippets.persistence/registered-directive-for-name "child") ())), #=(damp.ekeko.snippets.persistence/make-property-value-identifier #=(damp.ekeko.snippets.persistence/make-list-element-identifier #=(damp.ekeko.snippets.persistence/make-property-value-identifier #=(damp.ekeko.snippets.persistence/make-list-element-identifier #=(damp.ekeko.snippets.persistence/make-property-value-identifier #=(damp.ekeko.snippets.persistence/make-property-value-identifier #=(damp.ekeko.snippets.persistence/make-root-identifier) #=(damp.ekeko.snippets.persistence/class-propertydescriptor-with-id :MethodDeclaration "body")) #=(damp.ekeko.snippets.persistence/class-propertydescriptor-with-id :Block "statements")) #=(java.lang.Integer. "1")) #=(damp.ekeko.snippets.persistence/class-propertydescriptor-with-id :VariableDeclarationStatement "fragments")) #=(java.lang.Integer. "0")) #=(damp.ekeko.snippets.persistence/class-propertydescriptor-with-id :VariableDeclarationFragment "extraDimensions")) (), #=(damp.ekeko.snippets.persistence/make-list-element-identifier #=(damp.ekeko.snippets.persistence/make-property-value-identifier #=(damp.ekeko.snippets.persistence/make-property-value-identifier #=(damp.ekeko.snippets.persistence/make-list-element-identifier #=(damp.ekeko.snippets.persistence/make-property-value-identifier #=(damp.ekeko.snippets.persistence/make-property-value-identifier #=(damp.ekeko.snippets.persistence/make-root-identifier) #=(damp.ekeko.snippets.persistence/class-propertydescriptor-with-id :MethodDeclaration "body")) #=(damp.ekeko.snippets.persistence/class-propertydescriptor-with-id :Block "statements")) #=(java.lang.Integer. "2")) #=(damp.ekeko.snippets.persistence/class-propertydescriptor-with-id :ExpressionStatement "expression")) #=(damp.ekeko.snippets.persistence/class-propertydescriptor-with-id :MethodInvocation "arguments")) #=(java.lang.Integer. "0")) (), #=(damp.ekeko.snippets.persistence/make-property-value-identifier #=(damp.ekeko.snippets.persistence/make-root-identifier) #=(damp.ekeko.snippets.persistence/class-propertydescriptor-with-id :MethodDeclaration "typeParameters")) (#=(damp.ekeko.snippets.directives/make-bounddirective #=(damp.ekeko.snippets.persistence/registered-directive-for-name "match") ()) #=(damp.ekeko.snippets.directives/make-bounddirective #=(damp.ekeko.snippets.persistence/registered-directive-for-name "child") ())), #=(damp.ekeko.snippets.persistence/make-property-value-identifier #=(damp.ekeko.snippets.persistence/make-list-element-identifier #=(damp.ekeko.snippets.persistence/make-property-value-identifier #=(damp.ekeko.snippets.persistence/make-root-identifier) #=(damp.ekeko.snippets.persistence/class-propertydescriptor-with-id :MethodDeclaration "parameters")) #=(java.lang.Integer. "0")) #=(damp.ekeko.snippets.persistence/class-propertydescriptor-with-id :SingleVariableDeclaration "type")) (#=(damp.ekeko.snippets.directives/make-bounddirective #=(damp.ekeko.snippets.persistence/registered-directive-for-name "match") ()) #=(damp.ekeko.snippets.directives/make-bounddirective #=(damp.ekeko.snippets.persistence/registered-directive-for-name "child") ())), #=(damp.ekeko.snippets.persistence/make-property-value-identifier #=(damp.ekeko.snippets.persistence/make-list-element-identifier #=(damp.ekeko.snippets.persistence/make-property-value-identifier #=(damp.ekeko.snippets.persistence/make-property-value-identifier #=(damp.ekeko.snippets.persistence/make-root-identifier) #=(damp.ekeko.snippets.persistence/class-propertydescriptor-with-id :MethodDeclaration "body")) #=(damp.ekeko.snippets.persistence/class-propertydescriptor-with-id :Block "statements")) #=(java.lang.Integer. "0")) #=(damp.ekeko.snippets.persistence/class-propertydescriptor-with-id :ExpressionStatement "expression")) ()})])